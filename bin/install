#!/usr/bin/env bash

set -eo pipefail

fail() {
  echo -e "\e[31mFail:\e[m $*"
  exit 1
}

install_crystal() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$install_type" != "version" ]; then
    fail "asdf-crystal supports release installs only"
  fi

  local platform

  case "$OSTYPE" in
    darwin*) platform="darwin" ;;
    linux*) platform="linux" ;;
    *) fail "Unsupported platform" ;;
  esac

  if [ "$platform" == "darwin" ]; then
    if ! type brew >/dev/null 2>&1; then
      fail "pre-built releases of Crystal depend on Homebrew. Visit https://brew.sh to install it."
    fi

    if ! [ -d "$(brew --prefix libyaml 2>/dev/null || true)" ]; then
      fail "libyaml from Homebrew is required, run 'brew install libyaml'"
    fi
  fi

  local architecture

  case "$(uname -m)" in
    x86_64) architecture="x86_64" ;;
    i686) architecture="i686" ;;
    *) fail "Unsupported architecture" ;;
  esac

  local download_url="https://github.com/crystal-lang/crystal/releases/download/${version}/crystal-${version}-1-${platform}-${architecture}.tar.gz"
  local tmp_download_dir
  tmp_download_dir=$(mktemp -d -t crystal_tmp_XXXXXX)
  local source_path="${tmp_download_dir}/crystal.tar.gz"

  (
    echo "âˆ— Downloading and installing Crystal..."
    curl --silent --fail --location --create-dirs --output "$source_path" "$download_url" || fail "Could not download Crystal $version"
    tar zxf "$source_path" -C "$install_path" --strip-components=1
    rm -rf "$tmp_download_dir"
    echo "The installation was successful!"
  ) || (
    rm -rf "$install_path"
    fail "An error occurred"
  )
}

install_crystal "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
